# mods/quests/quest_the_doctor.py
import random
from ui import Button

class DoctorQuest:
    def __init__(self):
        self.name = "–ü—Ä–æ–ø–∞–≤—à–∏–π –¥–æ–∫—Ç–æ—Ä"
        self.state = "start"  # start, finding, found, finished
        self.dialogue_step = 0
        self.trust = 0  # -10 (–≤—Ä–∞–≥–∏) ... 10 (—Å–æ—é–∑–Ω–∏–∫–∏)

    def init(self, game):
        game.log.append("üßì –ü–æ–∂–∏–ª–∞—è –∂–µ–Ω—â–∏–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –≤–∞–º: '–ú–æ–π –º—É–∂, –¥–æ–∫—Ç–æ—Ä, –ø—Ä–æ–ø–∞–ª —É –±–æ–ª—å–Ω–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–π–¥–∏—Ç–µ –µ–≥–æ...'")

        game.current_event = {
            "text": "–î–æ–∫—Ç–æ—Ä –ø—Ä–æ–ø–∞–ª —É —Ä–∞–∑—Ä—É—à–µ–Ω–Ω–æ–π –±–æ–ª—å–Ω–∏—Ü—ã. –ü–æ–º–æ—á—å?"
        }
        game.event_choices = [
            Button(500, 500, 400, 40, "–ü–æ–º–æ—á—å", lambda: self.accept(game)),
            Button(500, 550, 400, 40, "–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", lambda: self.decline(game))
        ]

    def accept(self, game):
        game.log.append("–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∫–≤–µ—Å—Ç: –Ω–∞–π—Ç–∏ –¥–æ–∫—Ç–æ—Ä–∞.")
        game.active_quest = self
        self.state = "finding"
        game.current_event = None
        game.event_choices = []

    def decline(self, game):
        game.log.append("–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å. –ñ–µ–Ω—â–∏–Ω–∞ –∑–∞–ø–ª–∞–∫–∞–ª–∞ –∏ —É—à–ª–∞.")
        game.current_event = None
        game.event_choices = []

    def update(self, game):
        if self.state == "finding" and random.random() < 0.4:
            self.enter_hospital(game)

    def enter_hospital(self, game):
        game.log.append("–í—ã –≤–æ—à–ª–∏ –≤ –±–æ–ª—å–Ω–∏—Ü—É. –¢–µ–º–Ω–æ. –°–ª—ã—à–Ω—ã —à–∞–≥–∏...")
        game.current_event = {
            "text": "–í –∫–∞–±–∏–Ω–µ—Ç–µ –≤—ã –≤–∏–¥–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Ö–∞–ª–∞—Ç–µ. –û–Ω –¥—Ä–æ–∂–∏—Ç. '–¢—ã... –Ω–µ –∑–æ–º–±–∏?'"
        }
        game.event_choices = [
            Button(500, 500, 400, 40, "–°–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–¥—É", lambda: self.tell_truth(game)),
            Button(500, 550, 400, 40, "–ù–∞–∑–≤–∞—Ç—å—Å—è —Å–æ–ª–¥–∞—Ç–æ–º", lambda: self.lie(game))
        ]
        self.state = "found"

    def tell_truth(self, game):
        game.log.append("–î–æ–∫—Ç–æ—Ä –∫–∏–≤–∞–µ—Ç: '–Ø —Å–æ–±–∏—Ä–∞–ª –æ–±—Ä–∞–∑—Ü—ã –≤–∏—Ä—É—Å–∞. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –ø–æ–º–æ–≥–∏ –º–Ω–µ.'")
        self.trust += 2
        self.offer_research(game)

    def lie(self, game):
        game.log.append("–û–Ω –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ: '–ï—Å–ª–∏ —Ç—ã —Å–æ–ª–¥–∞—Ç... —É –º–µ–Ω—è –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –∞—Ä–º–∏–∏.'")
        self.trust -= 1
        self.offer_research(game)

    def offer_research(self, game):
        game.current_event = {
            "text": "–û–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç: '–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–∞–∫—Ü–∏–Ω–∞. –ù–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –ü–æ–º–æ–∂–µ—à—å?'"
        }
        game.event_choices = [
            Button(500, 500, 400, 40, "–ü–æ–º–æ—á—å –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏", lambda: self.help_research(game)),
            Button(500, 550, 400, 40, "–ó–∞–±—Ä–∞—Ç—å –≤–∞–∫—Ü–∏–Ω—É", lambda: self.steal_vaccine(game)),
            Button(500, 600, 400, 40, "–£–π—Ç–∏", lambda: self.leave(game))
        ]

    def help_research(self, game):
        game.log.append("–í—ã –ø–æ–º–æ–≥–ª–∏. –î–æ–∫—Ç–æ—Ä —Å–æ–∑–¥–∞–ª —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–∞–∫—Ü–∏–Ω—É.")
        game.player.inventory.add_item("medkit", 3)
        game.player.health = 100
        if hasattr(game, 'reputation'):
            game.reputation += 20
        game.log.append("üåç –ù–û–í–û–°–¢–¨: –í–∞–∫—Ü–∏–Ω–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è. –°–º–µ—Ä—Ç–Ω–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç.")
        self.finish(game)

    def steal_vaccine(self, game):
        game.log.append("–í—ã –∑–∞–±—Ä–∞–ª–∏ –≤–∞–∫—Ü–∏–Ω—É. –î–æ–∫—Ç–æ—Ä –∫—Ä–∏—á–∏—Ç: '–¢—ã –æ–±—Ä–µ–∫–∞–µ—à—å –º–∏—Ä –Ω–∞ –≥–∏–±–µ–ª—å!'")
        game.player.inventory.add_item("medkit", 5)
        if hasattr(game, 'reputation'):
            game.reputation -= 30
        game.log.append("‚ö†Ô∏è –†–∞–¥–∏–æ: '–í–∞–∫—Ü–∏–Ω–∞ —É–∫—Ä–∞–¥–µ–Ω–∞. –ê–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.'")
        self.finish(game)

    def leave(self, game):
        game.log.append("–í—ã —É—à–ª–∏. –î–æ–∫—Ç–æ—Ä –æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω...")
        if hasattr(game, 'reputation'):
            game.reputation -= 5
        self.finish(game)

    def finish(self, game):
        self.state = "finished"
        game.active_quest = None
        game.log.append("‚úÖ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω: –ü—Ä–æ–ø–∞–≤—à–∏–π –¥–æ–∫—Ç–æ—Ä")

# --- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
quest = DoctorQuest()

def init(game):
    if random.random() < 0.15:
        quest.init(game)

def on_next_day(game):
    if hasattr(game, 'active_quest') and game.active_quest == quest:
        quest.update(game)